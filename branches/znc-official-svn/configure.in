dnl Keep the version number in sync with main.h!
AC_INIT([znc], [0.071])
AC_CONFIG_SRCDIR([znc.cpp])
AC_LANG([C++])

# AC_PROG_CXX sets CXXFLAGS to "-O2 -g" if it is unset which we don't want
CXXFLAGS="$CXXFLAGS "
AC_PROG_CXX
AC_CANONICAL_HOST

appendLib () {
	if test "$LIBS" != ""; then
		LIBS="$LIBS $*"
	else
		LIBS=$*
	fi
}

appendCXX () {
	if test "$CXXFLAGS" != ""; then
		CXXFLAGS="$CXXFLAGS $*"
	else
		CXXFLAGS=$*
	fi
}

appendMod () {
	if test "$MODFLAGS" != ""; then
		MODFLAGS="$MODFLAGS $*"
	else
		MODFLAGS=$*
	fi
}

appendLD () {
	if test "$LDFLAGS" != ""; then
		LDFLAGS="$LDFLAGS $*"
	else
		LDFLAGS=$*
	fi
}

appendCXX "-D_FORTIFY_SOURCE=2"

case "${host_os}" in
	freebsd*)
		# -D__GNU_LIBRARY__ makes this work on fbsd 4.11
		appendCXX -I/usr/local/include -D__GNU_LIBRARY__
		appendLib -L/usr/local/lib -lcompat
		appendMod -L/usr/local/lib
	;;
	solaris*)
		appendLib -lsocket -lnsl
		ISSUN=1
	;;
	cygwin)
		ISCYGWIN=1
	;;
	darwin*)
		ISDARWIN=1
	;;
esac

AC_ARG_WITH( [openssl],
	AS_HELP_STRING([--with-openssl=DIR], [openssl's installation prefix]),
	[OPENSSL=$withval],)
AC_ARG_ENABLE( [debug],
	AS_HELP_STRING([--enable-debug], [enable debuging]),
	[DEBUG="$enableval"],
	[DEBUG="no"])
AC_ARG_ENABLE( [ipv6],
	AS_HELP_STRING([--disable-ipv6], [disable ipv6 support]),
	[IPV6="$enableval"],
	[IPV6="yes"])
AC_ARG_ENABLE( [modules],
	AS_HELP_STRING([--disable-modules], [disable modules]),
	[MODULES="$enableval"],
	[MODULES="yes"])
AC_ARG_ENABLE( [openssl],
	AS_HELP_STRING([--disable-openssl], [disable openssl]),
	[if test "$enableval" = "no" ; then NOSSL=1; fi],)
AC_ARG_ENABLE( [perl],
	AS_HELP_STRING([--disable-perl], [disable perl]),
	[if test "$enableval" = "no" ; then NOPERL=1; fi],)
AC_ARG_ENABLE( [sasl],
	AS_HELP_STRING([--enable-sasl], [enable sasl]),
	[if test "$enableval" = "yes" ; then SASL=1; fi],)
AC_ARG_ENABLE( [optimization],
	AS_HELP_STRING([--disable-optimization], [Disable some compiler optimizations to
			decrease memory usage while compiling]),
	[OPTIMIZE="$enableval"],
	[OPTIMIZE="yes"])
AC_ARG_ENABLE( [c-ares],
	AS_HELP_STRING([--disable-c-ares], [disable c-ares usage]),
	[ARES="$enableval"],
	[ARES="yes"])

if test "$DEBUG" != "no"; then
	appendCXX -ggdb -D_DEBUG
	# These enable some debug options in g++'s STL, e.g. invalid use of iterators
	appendCXX -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_GLIBCXX_CONCEPT_CHECKS
else
	if test "x$OPTIMIZE" = "xyes"; then
		appendCXX -O2
	fi
fi

if test "$IPV6" != "no"; then
	appendCXX -DHAVE_IPV6
fi

if test "x$GXX" = "xyes"; then
	appendCXX -Wall -W -Wno-unused-parameter -Woverloaded-virtual -Wshadow
fi

AC_CHECK_LIB( gnugetopt, getopt_long,)
AC_CHECK_FUNC([lstat], [appendCXX -DHAVE_LSTAT])

if test "x$ARES" = "xyes"; then
	PKG_PROG_PKG_CONFIG()
	if test -z "$PKG_CONFIG"
	then
		AC_MSG_ERROR([pkg-config not found. Try --disable-c-ares.])
	fi
	PKG_CHECK_MODULES([c_ares], [libcares],, AC_MSG_ERROR([c-ares not found. Try --disable-c-ares.]))
	appendCXX $c_ares_CFLAGS -DHAVE_ARES
	appendLib $c_ares_LIBS
fi

if test -z "$NOSSL"; then
	if test -n "$OPENSSL"; then
		appendLib -L${OPENSSL}/lib
		appendCXX -I${OPENSSL}/include
	fi

	# Don't reorder this!
	# On some arches libssl depends on libcrypto without linking to it :(
	AC_CHECK_LIB( crypto, BIO_new,,
		AC_MSG_ERROR([could not find libcrypto. Try --disable-openssl or install the appropriate dependencies eg. libssl-dev.]), )
	AC_CHECK_LIB( ssl, SSL_shutdown,,
		AC_MSG_ERROR([could not find libssl. Try --disable-openssl or install the appropriate dependencies eg. libssl-dev.]), )

	if test -z "$NOSSL"; then
		appendCXX -DHAVE_LIBSSL
	fi
fi

if test -z "$prefix" || test $prefix = "NONE"; then
	prefix="/usr/local"
fi

AC_ARG_WITH( [module-prefix],
	AS_HELP_STRING([--with-module-prefix], [module object code [[LIBDIR/znc]]]),
	[MODDIR=$withval],
	[MODDIR="${libdir}/znc"] )

AC_ARG_WITH( [module-data-prefix],
	AS_HELP_STRING([--with-module-data-prefix=DIR],
		[static module data (webadmin skins) [[DATADIR/znc]]]),
	[DATADIR=$withval],
	[DATADIR="${datadir}/znc"] )


if test "$MODULES" = "yes"; then
	FOUND_DL=no

	# Don't use any libs like -lssl -lcrypto when checking for dlopen(),
	# because they might change the test results
	SAVED_LIBS="$LIBS"
	LIBS=""

	AC_CHECK_FUNC(dlopen, FOUND_DL=yes,)
	AC_CHECK_LIB( dl, dlopen, FOUND_DL=yes ; appendLib -ldl,)

	appendLib "$SAVED_LIBS"

	if test $FOUND_DL = "no" ; then
		AC_MSG_ERROR([could not find dlopen. Try --disable-modules])
	fi

	appendCXX -D_MODULES
	appendMod "$CXXFLAGS"

	if test -z "$ISSUN" -a -z "$ISDARWIN"; then
		# This is an unknown compiler flag on some OS
		appendLD -Wl,--export-dynamic
	fi
	MODTARGET="modules"

	if test -z "$ISCYGWIN" ; then
		# cygwin doesn't need -fPIC, everything else does (for modules)
		# warning: -fPIC ignored for target (all code is position independent)
		appendMod -fPIC
	else
		# But cygwin does want most of znc in a shared lib
		LIBZNC="libznc.dll"
		LIBZNCDIR="$libdir/znc"
	fi

	if test -z "$ISDARWIN"; then
		MODLINK="-shared"
	else
		# Mac OS X differentiates between shared libs (-dynamiclib)
		# and loadable modules (-bundle).
		MODLINK="-bundle -flat_namespace -undefined suppress"
		# TODO test if -twolevel_namespace and/or
		# -undefined dynamic_lookup work
		# (dynamic_lookup might only work on 10.4 and later)
	fi

	if test -z "$NOPERL"; then
		AC_PATH_PROG([PERL], [perl], [])
		if test -n "$PERL"; then
			my_saved_LDFLAGS="$LDFLAGS"
			appendLD `$PERL -MExtUtils::Embed -e ccopts -e ldopts`
			AC_CHECK_LIB(perl, perl_alloc,unset NOPERL,
				AC_MSG_ERROR([could not find libperl. Try --disable-perl]))
			LDFLAGS="$my_saved_LDFLAGS"
		else
			AC_MSG_ERROR([could not find perl binary. Try --disable-perl])
		fi
	fi

	if test -n "$SASL"; then
		AC_CHECK_LIB( sasl2, sasl_server_init,
			[: Dont let autoconf add -lsasl2, Makefile handles that],
			AC_MSG_ERROR([could not find libsasl2. Try --disable-sasl.]))
	fi

	appendCXX "-D_MODDIR_=\\\"${MODDIR}\\\""
	appendCXX "-D_DATADIR_=\\\"${DATADIR}\\\""
fi

VERSION=AC_PACKAGE_VERSION

AC_SUBST([CXXFLAGS])
AC_SUBST([CPPFLAGS])
AC_SUBST([MODFLAGS])
AC_SUBST([LDFLAGS])
AC_SUBST([LIBS])
AC_SUBST([LIBZNC])
AC_SUBST([LIBZNCDIR])
AC_SUBST([MODLINK])
AC_SUBST([MODTARGET])
AC_SUBST([NOSSL])
AC_SUBST([PERL])
AC_SUBST([SASL])
AC_SUBST([MODDIR])
AC_SUBST([DATADIR])
AC_SUBST([VERSION])
AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([znc-config])
AC_CONFIG_FILES([znc-buildmod])
AC_CONFIG_FILES([man/Makefile])
AC_CONFIG_FILES([znc.pc])
AC_CONFIG_FILES([znc-uninstalled.pc])
if test "$MODULES" = "yes"; then
	AC_CONFIG_FILES([modules/Makefile])
fi
AC_OUTPUT

echo
echo znc AC_PACKAGE_VERSION configured
echo
echo "debug:   $DEBUG"
echo "ipv6:    $IPV6"
if test x"$NOSSL" = "x1" ; then
	echo "openssl: no"
else
	echo "openssl: yes"
fi
echo "c-ares:  $ARES"
echo "modules: $MODULES"
if test x"$PERL" = "x" ; then
	echo "perl:    no"
else
	echo "perl:    yes"
fi
if test x"$SASL" = "x" ; then
	echo "sasl:    no"
else
	echo "sasl:    yes"
fi

